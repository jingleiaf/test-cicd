name: Build Docker Images

on:
  workflow_dispatch:
    inputs:
        dockerFileDir:
          description: 'Docker File Directory'     
          required: true
        imageName:
          description: 'Image Name' 
          required: true
        imageTag:
          description: 'Image tag' 
          required: true
        imageVersion:
          description: 'Image version' 
          required: true       

env: 
  DOCKER_REGISTRY: test.com

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check if directory exists
      id: checkDirectory
      run: |
        if [ -d ${{ github.event.inputs.dockerFileDir }} ]; then
          echo "${{ github.event.inputs.dockerFileDir }} exists"
        else
          echo "${{ github.event.inputs.dockerFileDir }} does not exist"
          exit 1
        fi

    - name: Build image
      id: buildImage
      run: |
        cd ${{ github.event.inputs.dockerFileDir }}
        image_id="$DOCKER_REGISTRY/${{ github.event.inputs.imageName }}" 
        docker build -t "${image_id}" . 
      if: steps.checkDirectory.outcome == 'success'
    
    - name: docker login
      id: login
      run:   docker --config "tmp/docker-config.json" login -u "${{ secrets.DOCKER_LOGIN }}" -p "${{ secrets.DOCKER_PASSWORD }}" "$DOCKER_REGISTRY"
      if: steps.buildImage.outcome == 'success'

    - name: docker publish
      run: | 
        image_id="$DOCKER_REGISTRY/${{ github.event.inputs.imageName }}" 
        image_version_id="${{ github.event.inputs.imageVersion }}-${{ github.run_number }}"
        docker tag "${image_id}" "${image_version_id}" && docker --config "tmp/docker-config.json" push "${image_version_id}"
      if: steps.buildImage.login == 'success'

    - name: docker logout
      run: rm -rf "tmp/docker-config.json"
      if: steps.buildImage.login == 'success'

